<%#
  This template is i18n-ready: if you don't use i18n, then you can replace the pagy_t
  calls with the actual strings ("&lsaquo; Prev", "Next &rsaquo;", "&hellip;").

  This template uses the pagy_link_proc helper for high speed (+20x) and low memory (-12x).
  Usage: link.call(page_number[, label[,extra_attributes_string]])
-%>
<% link = pagy_link_proc(pagy) -%>
<nav aria-label="pager"  class="pagination" role="navigation">
  <ul class="pagination">
    <% if pagy.prev -%>
      <li class="page-item prev"><%== link.call(pagy.prev, pagy_t('pagy.nav.prev'), 'class="page-link" aria-label="previous"') %></li>
    <% else -%>
      <li class="page-item prev disabled"><a href="#" class="page-link"><%== pagy_t('pagy.nav.prev') %></a></li>
    <% end -%>
    <% pagy.series.each do |item| # series example: [1, :gap, 7, 8, "9", 10, 11, :gap, 36] -%>
      <% case item
           when Integer    # page link -%>
          <li class="page-item"><%== link.call(item, item, 'class="page-link"') %></li>
        <% when String     # current page -%>
          <li class="page-item active"><%== link.call(item, item, 'class="page-link"') %></li>
        <% when :gap       # page gap -%>
          <li class="page-item disabled gap"><a href="#" class="page-link"><%== pagy_t('pagy.nav.gap') %></a></li>
      <% end -%>
    <% end -%>
    <% if pagy.next -%>
      <li class="page-item next"><%== link.call(pagy.next, pagy_t('pagy.nav.next'), 'class="page-link" aria-label="next"') %></li>
    <% else -%>
      <li class="page-item next disabled"><a href="#" class="page-link"><%== pagy_t('pagy.nav.next') %></a></li>
    <% end -%>
  </ul>
</nav>
