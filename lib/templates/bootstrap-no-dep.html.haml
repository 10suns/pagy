-# This template uses only the pagy_url_for helper, no dependency on any framework
-# No special optimization for speed and memory. Use the pagy helpers if speed and memory are important.

- rel = { pagy.prev => 'prev', pagy.next => 'next' }

%nav.pagination{"aria-label" => "pager", :role => "navigation"}

  %ul.pagination

    %li.page-item.prev{:class => ('disabled' unless pagy.prev)}
      %a.page-link{:href => (pagy.prev ? pagy_url_for(pagy.prev) : '#'), :rel => "prev", "aria-label"=>"previous"}!= pagy_t('pagy.nav.prev')

    - pagy.series.each do |item| # series example: [1, :gap, 7, 8, "9", 10, 11, :gap, 36]
      - case item
        - when Integer # page link
          %li.page-item
            %a.page-link{:href => pagy_url_for(item), :rel => rel[item]}= item

        - when String # current page
          %li.page-item.active
            %a.page-link{:href => pagy_url_for(item)}= item

        - when :gap # page gap
          %li.page-item.disabled.gap
            %a.page-link{:href => "#"}!= pagy_t('pagy.nav.gap')

    %li.page-item.next{:class => ('disabled' unless pagy.next)}
      %a.page-link{:href => (pagy.next ? pagy_url_for(pagy.next) : '#'), :rel => "next", "aria-label"=>"next"}!= pagy_t('pagy.nav.next')
